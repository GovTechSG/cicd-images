name: build and publish

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  schedule:
    - cron:  '15 0 * * *'
  workflow_dispatch:

env:
  ECR_REPO: public.ecr.aws/l5k6t5t7/cicd-images
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - run: docker run --rm -i hadolint/hadolint < ./ansible/Dockerfile
  alpine:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: alpine
    name: alpine
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  ansible:
    env:
      IMAGE_NAME: ansible
    runs-on: ubuntu-latest
    name: ansible
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  atlantis:
    env:
      IMAGE_NAME: atlantis
    runs-on: ubuntu-latest
    name: atlantis
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  chrome-oracle-py:
    env:
      IMAGE_NAME: chrome-oracle-py
    runs-on: ubuntu-latest
    name: chrome-oracle-py
    strategy:
      matrix:
        include:
          - python_version: 3.11
            oracle_version: 12.2.0.1.0
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: PYTHON_VERSION=${{ matrix.python_version }},ORACLE_VERSION=${{ matrix.oracle_version }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: PYTHON_VERSION=${{ matrix.python_version }},ORACLE_VERSION=${{ matrix.oracle_version }}
        uses: ./.github/actions/build-and-publish-force

  cypress:
    env:
      IMAGE_NAME: cypress
    runs-on: ubuntu-latest
    name: cypress
    strategy:
      matrix:
        node-version: [ 
          "node-16.18.1-chrome-110.0.5481.96-1-ff-109.0-edge-110.0.1587.41-1",
          "node-18.16.1-chrome-114.0.5735.133-1-ff-114.0.2-edge-114.0.1823.51-1" 
        ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: NODE_VERSION=${{ matrix.node-version }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: NODE_VERSION=${{ matrix.node-version }}
        uses: ./.github/actions/build-and-publish-force

  dephash:
    env:
      IMAGE_NAME: dephash
    runs-on: ubuntu-latest
    name: dephash
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  dependency-check:
    env:
      IMAGE_NAME: dependency-check
    runs-on: ubuntu-latest
    name: dependency-check
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  dind:
    env:
      IMAGE_NAME: dind
    runs-on: ubuntu-latest
    name: dind
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  go-pact:
    env:
      IMAGE_NAME: go-pact
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.15', '1.16', '1.17', '1.18', '1.19', '1.20']
    name: go-pact
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: GOLANG_MAJOR_VERSION=${{ matrix.go-version }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: GOLANG_MAJOR_VERSION=${{ matrix.go-version }}
        uses: ./.github/actions/build-and-publish-force

  # this is required as 1.21 uses bullseye and golang tags no longer work with buster since 1.20 
  go-pact-bullseye:
    env:
      IMAGE_NAME: go-pact-bullseye
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21']
    name: go-pact-bullseye
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: GOLANG_MAJOR_VERSION=${{ matrix.go-version }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: GOLANG_MAJOR_VERSION=${{ matrix.go-version }}
        uses: ./.github/actions/build-and-publish-force

  karma:
    env:
      IMAGE_NAME: karma
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - node-base: lts-alpine3.16
    name: karma
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: NODE_BASE=${{ matrix.node-base }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: NODE_BASE=${{ matrix.node-base }}
        uses: ./.github/actions/build-and-publish-force

  kubectl:
    env:
      IMAGE_NAME: kubectl
    runs-on: ubuntu-latest
    name: kubectl
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  node:
    env:
      IMAGE_NAME: node
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18, lts]
    name: node
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: NODE_MAJOR_VERSION=${{ matrix.node-version }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          docker_build_args: NODE_MAJOR_VERSION=${{ matrix.node-version }}
        uses: ./.github/actions/build-and-publish-force

  pact-provider-verifier:
    env:
      IMAGE_NAME: pact-provider-verifier
    runs-on: ubuntu-latest
    name: pact-provider-verifier
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  pandoc-node:
    env:
      IMAGE_NAME: pandoc-node
    runs-on: ubuntu-latest
    name: pandoc-node
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  pivotaltracker-commit:
    env:
      IMAGE_NAME: pivotaltracker-commit
    runs-on: ubuntu-latest
    name: pivotaltracker-commit
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  sqlplus:
    env:
      IMAGE_NAME: sqlplus
    runs-on: ubuntu-latest
    name: sqlplus
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  trinity:
    env:
      IMAGE_NAME: trinity
    runs-on: ubuntu-latest
    name: trinity
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  vtscripts:
    env:
      IMAGE_NAME: vtscripts
    runs-on: ubuntu-latest
    name: vtscripts
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  k6:
    env:
      IMAGE_NAME: k6
    runs-on: ubuntu-latest
    name: k6
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  trivy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: trivy
    name: trivy
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force
